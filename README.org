* References
** OpenCL
- https://towardsdatascience.com/get-started-with-gpu-image-processing-15e34b787480
- https://github.com/githubharald/GPUImageProcessingArticle
- zero copy intel https://software.intel.com/en-us/articles/getting-the-most-from-opencl-12-how-to-increase-performance-by-minimizing-buffer-copies-on-intel-processor-graphics
- halide has python interface now https://github.com/halide/Halide
- halide examples https://github.com/fixstars/Halide-elements/tree/master/include
** Finite Difference Solver
- https://github.com/lbolla/EMpy/blob/master/EMpy/modesolvers/FD.py
- http://www.photonics.umd.edu/wp-content/uploads/pubs/ja-20/Fallahkhair_JLT_26_1423_2008.pdf
** Sparse Eigensolver
- petsc (uses viennacl) https://www.mcs.anl.gov/petsc/documentation/installation.html#OpenCL
- viennacl http://viennacl.sourceforge.net/
- tutorial on lanczos method http://people.bath.ac.uk/mamamf/talks/lanczos.pdf
- slepc http://slepc.upv.es/slepc4py-current/docs/usrman/tutorial.html
# insert source with <s Tab
#+BEGIN_SRC 
pip3 install --user slepc4py
#+END_SRC

#+BEGIN_SRC 
from petsc4py import PETSc
from slepc4py import SLEPc
import numpy
#+END_SRC
- lanczos method on gpu http://www.asc.tuwien.ac.at/~juengel/publications/pdf/icnaam2013.pdf
